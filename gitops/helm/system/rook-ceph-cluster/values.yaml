cluster:
  rook-ceph-cluster:
    # ingress:
    #   dashboard:
    #      annotations:
    #        external-dns.alpha.kubernetes.io/hostname: rook-ceph.dashboard.k3s0.ujstor.com
    #        nginx.ingress.kubernetes.io/rewrite-target: /ceph-dashboard/$2
    #        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #        nginx.ingress.kubernetes.io/server-snippet: |
    #          proxy_ssl_verify off;
    #      host:
    #        name: rook-ceph.dashboard.k3s0.ujstor.com
    #        path: "/ceph-dashboard(/|$)(.*)"
    #      tls:
    #      - hosts:
    #          - rook-ceph.dashboard.k3s0.ujstor.com
    #        secretName: rook-ceph-ingress-tls
    #      ingressClassName: nginx
    cephClusterSpec:
      mon:
        count: 3
        allowMultiplePerNode: false
      mgr:
        count: 3
        allowMultiplePerNode: false
      resources:
        mgr:
          limits:
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        mon:
          limits:
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        osd:
          limits:
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "2Gi"
      dashboard:
        enabled: true
        ssl: true
      placement:
        all:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: rook-ceph-role
                    operator: In
                    values:
                    - storage-node
      storage:
        useAllDevices: true
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          allowVolumeExpansion: true
          reclaimPolicy: Delete
          parameters:
            csi.storage.k8s.io/fstype: ext4
            encrypted: "false"
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          allowedTopologies: 
            - matchLabelExpressions:
                - key: rook-ceph-role
                  values:
                    - storage-node
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - name: replicated
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            resources:
              limits:
                memory: "2Gi"
              requests:
                cpu: "500m"
                memory: "2Gi"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          allowVolumeExpansion: true
          reclaimPolicy: Delete
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
